입사 지원하기
지원사항
응시구분	신입 	수험번호	345267
1지망 응시부문	SW개발 	1지망 응시직무	[2017 하계 인턴] SW개발 부문
기본 인적사항
본인사진
성명	한글  엄호경 한자  嚴浩京 영문  (성 : Eom  이름 : HoKyeong)
국적	대한민국
전화번호	031 - 733 - 9520	휴대전화번호	010 - 6204 - 4024
생년월일	1988.10.30	결혼여부	미혼
주소	462120 경기도 성남시 중원구 순환로198번길 12 (상대원동, 일성아파트) 406호
현 거주국가	대한민국
현 거주지 주소	462120 경기도 성남시 중원구 순환로198번길 12 (상대원동, 일성아파트) 406호
이메일	joq12@naver.com
지원경로	추천
 병역사항
병역구분	만기제대 	군별	육군
복무기간	2008.01.14 ~ 2010.09.08 	면제사유/복무계획
 보훈사항
보훈대상	비대상	보훈번호
 장애사항
장애구분	 	장애유형
장애등급	 	중증여부
사유	 	번호
 학력사항
학력	학교	전공	입학년월	졸업년월	학점	소재지	편입여부	세부전공
고등학교	풍생고등학교	 	2005.02	2007.02	/  	경기 	N
대학교	건국대학교	컴퓨터공학부 	2007.03	2014.02	3.27 / 4.5 	서울 	N
경력사항
근무회사	입사일	퇴사일	담당직무	역할	업무내용	개월수	프로젝트 경력
 자격사항
자격/면허종류	등급	취득일	발급기관
정보처리기사 	 	2013.05.31 	한국산업인력공단
수상내역
대회명	수상명	수상일	내용
 어학사항
언어종류	시험종류	등급	점수	응시일	발급기관
 가족사항
관계	성명	생년월일	동거여부
부	엄순현	1958.04.24	동거
모	정현호	1962.09.01	동거
자(누나/언니)	엄설아	1986.06.22	동거
자기소개
1. SW 개발 관련하여 수강한 과목명 및 성적을 연도별로 구분하여 작성해 주세요. (자료구조, 알고리즘, 개발 언어 성적 우수자 우대합니다.)

2007년도 1학기
정보통신기초 A
컴퓨터공학프로그래밍1 C+

2007년도 2학기
컴퓨터공학프로그래밍2 B+

2011년도 1학기
창의적공학설계입문 B+
자료구조 A+

2011년도 2학기
소프트웨어공학개론 B+
알고리즘 B+
시스템프로그래밍 B+

2012년도 1학기
프로그래밍언어론 B
화일처리 B
운영체제 A
데이터통신 B+
컴퓨터구조론1 B

2012년도 2학기
운영체제프로그래밍 B+
멀티미디어공학개론 A
소프트웨어설계방법론 C+
네트워크프로그래밍 B+

2013년도 1학기
웹기술응용설계 B+
디지털영상처리 A+
2. 학교생활 이외에 개발 능력 향상을 위한 활동(오픈소스 개발 참여경험, 외부기관 주최 해커톤 등)이 있으면 기술하시오.

현재 코드스쿼드(http://codesquad.kr/)란 교육기관에서 프론트엔드 교육을 받고 있습니다.
1월 2일 부터 2월 28일까지 2개월간 진행된 화이트 과정을 수료하고
현재는 3월 13일 부터 5월 31일까지 3개월간 진행되는 블루 과정을 진행하고 있습니다.
화이트 과정에서는 기초부터 탄탄히 쌓아가기 위해 HTML5, CSS, JavaScript 언어의 기초부터 세밀하게 배웠으며
프로그래밍 언어 이외에도 알고리즘, 네트워크, 데이터베이스, GitHub 사용법, 디버깅, Agile 기반의 프로젝트 개발 방법론 등을 배웠습니다.
이후에 블루 과정에서는 화이트 과정에서 배운 기초를 토대로 개발에 도움이 될 수 있는 라이브러리와 프레임워크(React, JQuery)를 배웠으며
NodeJs를 활용한 서버구축 실습들을 했습니다.
팀프로젝트로 'Codedu'라는 서비스를 개발중입니다.(https://github.com/latilt/codedu/tree/dev)
개발에 입문하는 초급개발자들을 위한 개발언어 교육을 주제로 한 프로젝트이며
React, NodeJs, MySQL, Mongod 기술이 사용되었습니다.
주요 기능 단위로 개발 단위를 나누어 팀원들과 분배하여 개발을 하였으며 클라이언트에서 서버, 데이터베이스까지 한 싸이클을 담당하여 개발을 진행하였습니다.
3. 아래를 구현하시오.
- 소스 코드와 수행결과를 Paste해 주세요. (작성한 코드를 인터넷 등 외부에 공개하지 마시오.)
- Java, C, C++ 중 택1.

* 읽기 좋은 코드가 좋은 코드 입니다. 읽기 좋은 코드로 작성해 주세요.
** 시간 복잡도와 메모리 이슈, 최적의 성능에 중점을 두세요.
*** 요구 사항이 모호하다면, 그 부분을 재정의하여 서술하고 구현하시오.


문제 ) A는 해외 여행을 가려하며, 경비로 한화 100만원을 예상한다.
방문지의 화폐단위는 N이며, 100N, 50N, 20N, 10N, 5N, 1N 의 지폐가 존재한다.

환전하려는 A의 요구사항은 다음과 같다.
* 지폐 종류별 1장 이상씩 환전 하었으면 좋겠다.
* 100N 은 4장, 50N 은 4장만 환전하고 싶다.
* 1N 은 20장 이상 환전하고 싶다.
* 20N부터 1N까지 라운드로빈(화폐단위별 순차적으로 1장씩)으로 환전하며, 우리돈 2,000원 이하는 잔돈으로 받고 싶다.
(특정단위 추가하여 100만원이 넘으면 그 단위 제외하고 다시 라운드로빈)

100만원으로 환전할 수 있는 화폐의 장수와 환전 후 남은 잔돈을 출력하시오.
( 환율은 1N 에 한화 1,322원으로 한다. )


출력 예)
100N : 4장
50N : 4장
20N : 4장
10N : 3장
5N : 4장
1N : 25장

잔돈 : 1890원

public class Exchange {

	public static void main(String[] args) {
		int expenses = 1000000;	// 총경비
		int exchangeRate = 1322;	// 환율
		int changes = expenses;		// 잔돈

		/* 환전하려는 A의 요구사항
		 * 지폐 종류별 1장 이상씩 환전 하였으면 좋겠다. -> 기본값은 1이상
		 * 100N은 4장, 50N은 4장만 환전하고 싶다. -> 100N과 50N은 라운드로빈 할 필요 없으며 4장씩의 금액을 미리 빼고 계산한다.
		 * 1N은 20장 이상 환전하고 싶다. -> 1N은 라운드로빈을 하며 20장의 금액을 미리 빼고 계산한다.
		 * {100N, 50N, 20N, 10N, 5N, 1N}
		 */
		int[] amount = {4, 4, 1, 1, 1, 20};

		/*
		 * 라운드로빈 전 요구사항에 맞출 수 있도록 필요금액을 빼준다.
		 */
		changes = changes - ((100 * amount[0] + 50 * amount[1] + 20 * amount[2] + 10 * amount[3] + 5 * amount[4] + 1 * amount[5]) * exchangeRate);

		/* 20N부터 1N까지 라운드로빈 -> 잔돈이 일정량 이상인 동안 while문을 돌며 순차적으로 환전
		 * 우리돈 2,000원 이하는 잔돈으로 받고 싶다. -> 잔돈이 2000이하가 되면 중지
		 */
		while(changes > 2000) {
			if(changes - 20 * exchangeRate >= 0) {
				changes = changes - 20 * exchangeRate;
				amount[2]++;
			}
			if(changes - 10 * exchangeRate >= 0) {
				changes = changes - 10 * exchangeRate;
				amount[3]++;
			}
			if(changes - 5 * exchangeRate >= 0) {
				changes = changes - 5 * exchangeRate;
				amount[4]++;
			}
			if(changes - exchangeRate >= 0) {
				changes = changes - exchangeRate;
				amount[5]++;
			}
		}

		System.out.println("100N : " + amount[0] + "장");
		System.out.println("50N : " + amount[1] + "장");
		System.out.println("20N : " + amount[2] + "장");
		System.out.println("10N : " + amount[3] + "장");
		System.out.println("5N : " + amount[4] + "장");
		System.out.println("1N : " + amount[5] + "장");
		System.out.println("잔돈 : " + changes + "원");
	}
}
 수정하기  지원하기
